{"version":3,"file":"tcg-near-marketplace.js","sources":["../node_modules/near-sdk-js/lib/near-bindgen.js","../node_modules/near-sdk-js/lib/api.js","../node_modules/near-sdk-js/lib/near-contract.js","../node_modules/near-sdk-js/lib/collections/lookup-map.js","../node_modules/near-sdk-js/lib/utils.js","../node_modules/near-sdk-js/lib/collections/vector.js","../node_modules/near-sdk-js/lib/collections/unordered-map.js","../node_modules/near-sdk-js/lib/collections/unordered-set.js","../src/marketplace/listing.ts","../src/marketplace/nft_listing.ts","../src/marketplace/contract.ts"],"sourcesContent":["export function call(target, key, descriptor) {\n}\nexport function view(target, key, descriptor) {\n}\nexport function NearBindgen(target) {\n    return class extends target {\n        static _init() {\n            // @ts-ignore\n            let args = target.deserializeArgs();\n            let ret = new target(args);\n            // @ts-ignore\n            ret.init();\n            // @ts-ignore\n            ret.serialize();\n            return ret;\n        }\n        static _get() {\n            let ret = Object.create(target.prototype);\n            return ret;\n        }\n    };\n}\n","const U64_MAX = 2n ** 64n - 1n;\nconst EVICTED_REGISTER = U64_MAX - 1n;\nexport function log(...params) {\n    env.log(`${params\n        .map(x => x === undefined ? 'undefined' : x) // Stringify undefined\n        .map(x => typeof (x) === 'object' ? JSON.stringify(x) : x) // Convert Objects to strings\n        .join(' ')}` // Convert to string\n    );\n}\nexport function signerAccountId() {\n    env.signer_account_id(0);\n    return env.read_register(0);\n}\nexport function signerAccountPk() {\n    env.signer_account_pk(0);\n    return env.read_register(0);\n}\nexport function predecessorAccountId() {\n    env.predecessor_account_id(0);\n    return env.read_register(0);\n}\nexport function blockIndex() {\n    return env.block_index();\n}\nexport function blockHeight() {\n    return blockIndex();\n}\nexport function blockTimestamp() {\n    return env.block_timestamp();\n}\nexport function epochHeight() {\n    return env.epoch_height();\n}\nexport function attachedDeposit() {\n    return env.attached_deposit();\n}\nexport function prepaidGas() {\n    return env.prepaid_gas();\n}\nexport function usedGas() {\n    return env.used_gas();\n}\nexport function randomSeed() {\n    env.random_seed(0);\n    return env.read_register(0);\n}\nexport function sha256(value) {\n    env.sha256(value, 0);\n    return env.read_register(0);\n}\nexport function keccak256(value) {\n    env.keccak256(value, 0);\n    return env.read_register(0);\n}\nexport function keccak512(value) {\n    env.keccak512(value, 0);\n    return env.read_register(0);\n}\nexport function ripemd160(value) {\n    env.ripemd160(value, 0);\n    return env.read_register(0);\n}\nexport function ecrecover(hash, sig, v, malleabilityFlag) {\n    let ret = env.ecrecover(hash, sig, v, malleabilityFlag, 0);\n    if (ret === 0n) {\n        return null;\n    }\n    return env.read_register(0);\n}\nexport function panic(msg) {\n    if (msg !== undefined) {\n        env.panic(msg);\n    }\n    else {\n        env.panic();\n    }\n}\nexport function panicUtf8(msg) {\n    env.panic_utf8(msg);\n}\nexport function logUtf8(msg) {\n    env.log_utf8(msg);\n}\nexport function logUtf16(msg) {\n    env.log_utf16(msg);\n}\nexport function storageRead(key) {\n    let ret = env.storage_read(key, 0);\n    if (ret === 1n) {\n        return env.read_register(0);\n    }\n    else {\n        return null;\n    }\n}\nexport function storageHasKey(key) {\n    let ret = env.storage_has_key(key);\n    if (ret === 1n) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexport function validatorStake(accountId) {\n    return env.validator_stake(accountId);\n}\nexport function validatorTotalStake() {\n    return env.validator_total_stake();\n}\nexport function altBn128G1Multiexp(value) {\n    env.alt_bn128_g1_multiexp(value, 0);\n    return env.read_register(0);\n}\nexport function altBn128G1Sum(value) {\n    env.alt_bn128_g1_sum(value, 0);\n    return env.read_register(0);\n}\nexport function altBn128PairingCheck(value) {\n    let ret = env.alt_bn128_pairing_check(value);\n    if (ret === 1n) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexport function jsvmAccountId() {\n    env.jsvm_account_id(0);\n    return env.read_register(0);\n}\nexport function jsvmJsContractName() {\n    env.jsvm_js_contract_name(0);\n    return env.read_register(0);\n}\nexport function jsvmMethodName() {\n    env.jsvm_method_name(0);\n    return env.read_register(0);\n}\nexport function jsvmArgs() {\n    env.jsvm_args(0);\n    return env.read_register(0);\n}\nexport function jsvmStorageWrite(key, value) {\n    let exist = env.jsvm_storage_write(key, value, EVICTED_REGISTER);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function jsvmStorageRead(key) {\n    let exist = env.jsvm_storage_read(key, 0);\n    if (exist === 1n) {\n        return env.read_register(0);\n    }\n    return null;\n}\nexport function jsvmStorageRemove(key) {\n    let exist = env.jsvm_storage_remove(key, EVICTED_REGISTER);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function jsvmStorageHasKey(key) {\n    let exist = env.jsvm_storage_has_key(key);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function jsvmCallRaw(contractName, method, args) {\n    env.jsvm_call(contractName, method, JSON.stringify(args), 0);\n    return env.read_register(0);\n}\nexport function jsvmCall(contractName, method, args) {\n    let ret = jsvmCallRaw(contractName, method, args);\n    if (ret === null) {\n        return ret;\n    }\n    return JSON.parse(ret);\n}\nexport function storageGetEvicted() {\n    return env.read_register(EVICTED_REGISTER);\n}\nexport function jsvmValueReturn(value) {\n    env.jsvm_value_return(value);\n}\n// Standalone only APIs\nexport function currentAccountId() {\n    env.current_account_id(0);\n    return env.read_register(0);\n}\nexport function input() {\n    env.input(0);\n    return env.read_register(0);\n}\nexport function storageUsage() {\n    return env.storage_usage();\n}\nexport function accountBalance() {\n    return env.account_balance();\n}\nexport function accountLockedBalance() {\n    return env.account_locked_balance();\n}\nexport function valueReturn(value) {\n    env.value_return(value);\n}\nexport function promiseCreate(accountId, methodName, args, amount, gas) {\n    return env.promise_create(accountId, methodName, args, amount, gas);\n}\nexport function promiseThen(promiseIndex, accountId, methodName, args, amount, gas) {\n    return env.promise_then(promiseIndex, accountId, methodName, args, amount, gas);\n}\nexport function promiseAnd(...promiseIndex) {\n    return env.promise_and(...promiseIndex);\n}\nexport function promiseBatchCreate(accountId) {\n    return env.promise_batch_create(accountId);\n}\nexport function promiseBatchThen(promiseIndex, accountId) {\n    return env.promise_batch_then(promiseIndex, accountId);\n}\nexport function promiseBatchActionCreateAccount(promiseIndex) {\n    env.promise_batch_action_create_account(promiseIndex);\n}\nexport function promiseBatchActionDeployContract(promiseIndex, code) {\n    env.promise_batch_action_deploy_contract(promiseIndex, code);\n}\nexport function promiseBatchActionFunctionCall(promiseIndex, methodName, args, amount, gas) {\n    env.promise_batch_action_function_call(promiseIndex, methodName, args, amount, gas);\n}\nexport function promiseBatchActionTransfer(promiseIndex, amount) {\n    env.promise_batch_action_transfer(promiseIndex, amount);\n}\nexport function promiseBatchActionStake(promiseIndex, amount, publicKey) {\n    env.promise_batch_action_stake(promiseIndex, amount, publicKey);\n}\nexport function promiseBatchActionAddKeyWithFullAccess(promiseIndex, publicKey, nonce) {\n    env.promise_batch_action_add_key_with_full_access(promiseIndex, publicKey, nonce);\n}\nexport function promiseBatchActionAddKeyWithFunctionCall(promiseIndex, publicKey, nonce, allowance, receiverId, methodNames) {\n    env.promise_batch_action_add_key_with_function_call(promiseIndex, publicKey, nonce, allowance, receiverId, methodNames);\n}\nexport function promiseBatchActionDeleteKey(promiseIndex, publicKey) {\n    env.promise_batch_action_delete_key(promiseIndex, publicKey);\n}\nexport function promiseBatchActionDeleteAccount(promiseIndex, beneficiaryId) {\n    env.promise_batch_action_delete_account(promiseIndex, beneficiaryId);\n}\nexport function promiseResultsCount() {\n    return env.promise_results_count();\n}\nexport var PromiseResult;\n(function (PromiseResult) {\n    PromiseResult[PromiseResult[\"NotReady\"] = 0] = \"NotReady\";\n    PromiseResult[PromiseResult[\"Successful\"] = 1] = \"Successful\";\n    PromiseResult[PromiseResult[\"Failed\"] = 2] = \"Failed\";\n})(PromiseResult || (PromiseResult = {}));\nexport function promiseResult(resultIdx) {\n    let status = env.promise_result(resultIdx, 0);\n    if (status == PromiseResult.Successful) {\n        return env.read_register(0);\n    }\n    else if (status == PromiseResult.Failed ||\n        status == PromiseResult.NotReady) {\n        return status;\n    }\n    else {\n        panic(`Unexpected return code: ${status}`);\n    }\n}\nexport function promiseReturn(promiseIdx) {\n    env.promise_return(promiseIdx);\n}\nexport function storageWrite(key, value) {\n    let exist = env.storage_write(key, value, EVICTED_REGISTER);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function storageRemove(key) {\n    let exist = env.storage_remove(key, EVICTED_REGISTER);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function storageByteCost() {\n    return 10000000000000000000n;\n}\n","import * as near from \"./api\";\nexport class NearContract {\n    deserialize() {\n        const rawState = near.storageRead(\"STATE\");\n        if (rawState) {\n            const state = JSON.parse(rawState);\n            // reconstruction of the contract class object from plain object\n            let c = this.default();\n            Object.assign(this, state);\n            for (const item in c) {\n                if (c[item].constructor?.deserialize !== undefined) {\n                    this[item] = c[item].constructor.deserialize(this[item]);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Contract state is empty\");\n        }\n    }\n    serialize() {\n        near.storageWrite(\"STATE\", JSON.stringify(this));\n    }\n    static deserializeArgs() {\n        let args = near.input();\n        return JSON.parse(args || \"{}\");\n    }\n    static serializeReturn(ret) {\n        return JSON.stringify(ret);\n    }\n    init() { }\n}\n","import * as near from '../api';\nexport class LookupMap {\n    constructor(keyPrefix) {\n        this.keyPrefix = keyPrefix;\n    }\n    containsKey(key) {\n        let storageKey = this.keyPrefix + JSON.stringify(key);\n        return near.storageHasKey(storageKey);\n    }\n    get(key) {\n        let storageKey = this.keyPrefix + JSON.stringify(key);\n        let raw = near.storageRead(storageKey);\n        if (raw !== null) {\n            return JSON.parse(raw);\n        }\n        return null;\n    }\n    remove(key) {\n        let storageKey = this.keyPrefix + JSON.stringify(key);\n        if (near.storageRemove(storageKey)) {\n            return JSON.parse(near.storageGetEvicted());\n        }\n        return null;\n    }\n    set(key, value) {\n        let storageKey = this.keyPrefix + JSON.stringify(key);\n        let storageValue = JSON.stringify(value);\n        if (near.storageWrite(storageKey, storageValue)) {\n            return JSON.parse(near.storageGetEvicted());\n        }\n        return null;\n    }\n    extend(objects) {\n        for (let kv of objects) {\n            this.set(kv[0], kv[1]);\n        }\n    }\n    serialize() {\n        return JSON.stringify(this);\n    }\n    // converting plain object to class object\n    static deserialize(data) {\n        return new LookupMap(data.keyPrefix);\n    }\n}\n","export function u8ArrayToBytes(array) {\n    let ret = \"\";\n    for (let e of array) {\n        ret += String.fromCharCode(e);\n    }\n    return ret;\n}\n// TODO this function is a bit broken and the type can't be string\n// TODO for more info: https://github.com/near/near-sdk-js/issues/78\nexport function bytesToU8Array(bytes) {\n    let ret = new Uint8Array(bytes.length);\n    for (let i = 0; i < bytes.length; i++) {\n        ret[i] = bytes.charCodeAt(i);\n    }\n    return ret;\n}\nexport function bytes(strOrU8Array) {\n    if (typeof strOrU8Array == \"string\") {\n        return checkStringIsBytes(strOrU8Array);\n    }\n    else if (strOrU8Array instanceof Uint8Array) {\n        return u8ArrayToBytes(strOrU8Array);\n    }\n    throw new Error(\"bytes: expected string or Uint8Array\");\n}\nfunction checkStringIsBytes(str) {\n    for (let i = 0; i < str.length; i++) {\n        if (str.charCodeAt(i) > 255) {\n            throw new Error(`string ${str} at index ${i}: ${str[i]} is not a valid byte`);\n        }\n    }\n    return str;\n}\nexport function assert(b, str) {\n    if (b) {\n        return;\n    }\n    else {\n        throw Error(\"assertion failed: \" + str);\n    }\n}\n","import * as near from \"../api\";\nimport { u8ArrayToBytes } from \"../utils\";\nconst ERR_INDEX_OUT_OF_BOUNDS = \"Index out of bounds\";\nconst ERR_INCONSISTENT_STATE = \"The collection is an inconsistent state. Did previous smart contract execution terminate unexpectedly?\";\nfunction indexToKey(prefix, index) {\n    let data = new Uint32Array([index]);\n    let array = new Uint8Array(data.buffer);\n    let key = u8ArrayToBytes(array);\n    return prefix + key;\n}\n/// An iterable implementation of vector that stores its content on the trie.\n/// Uses the following map: index -> element\nexport class Vector {\n    constructor(prefix) {\n        this.length = 0;\n        this.prefix = prefix;\n    }\n    len() {\n        return this.length;\n    }\n    isEmpty() {\n        return this.length == 0;\n    }\n    get(index) {\n        if (index >= this.length) {\n            return null;\n        }\n        let storageKey = indexToKey(this.prefix, index);\n        return JSON.parse(near.storageRead(storageKey));\n    }\n    /// Removes an element from the vector and returns it in serialized form.\n    /// The removed element is replaced by the last element of the vector.\n    /// Does not preserve ordering, but is `O(1)`.\n    swapRemove(index) {\n        if (index >= this.length) {\n            throw new Error(ERR_INDEX_OUT_OF_BOUNDS);\n        }\n        else if (index + 1 == this.length) {\n            return this.pop();\n        }\n        else {\n            let key = indexToKey(this.prefix, index);\n            let last = this.pop();\n            if (near.storageWrite(key, JSON.stringify(last))) {\n                return JSON.parse(near.storageGetEvicted());\n            }\n            else {\n                throw new Error(ERR_INCONSISTENT_STATE);\n            }\n        }\n    }\n    push(element) {\n        let key = indexToKey(this.prefix, this.length);\n        this.length += 1;\n        near.storageWrite(key, JSON.stringify(element));\n    }\n    pop() {\n        if (this.isEmpty()) {\n            return null;\n        }\n        else {\n            let lastIndex = this.length - 1;\n            let lastKey = indexToKey(this.prefix, lastIndex);\n            this.length -= 1;\n            if (near.storageRemove(lastKey)) {\n                return JSON.parse(near.storageGetEvicted());\n            }\n            else {\n                throw new Error(ERR_INCONSISTENT_STATE);\n            }\n        }\n    }\n    replace(index, element) {\n        if (index >= this.length) {\n            throw new Error(ERR_INDEX_OUT_OF_BOUNDS);\n        }\n        else {\n            let key = indexToKey(this.prefix, index);\n            if (near.storageWrite(key, JSON.stringify(element))) {\n                return JSON.parse(near.storageGetEvicted());\n            }\n            else {\n                throw new Error(ERR_INCONSISTENT_STATE);\n            }\n        }\n    }\n    extend(elements) {\n        for (let element of elements) {\n            this.push(element);\n        }\n    }\n    [Symbol.iterator]() {\n        return new VectorIterator(this);\n    }\n    clear() {\n        for (let i = 0; i < this.length; i++) {\n            let key = indexToKey(this.prefix, i);\n            near.storageRemove(key);\n        }\n        this.length = 0;\n    }\n    toArray() {\n        let ret = [];\n        for (let v of this) {\n            ret.push(v);\n        }\n        return ret;\n    }\n    serialize() {\n        return JSON.stringify(this);\n    }\n    // converting plain object to class object\n    static deserialize(data) {\n        let vector = new Vector(data.prefix);\n        vector.length = data.length;\n        return vector;\n    }\n}\nexport class VectorIterator {\n    constructor(vector) {\n        this.current = 0;\n        this.vector = vector;\n    }\n    next() {\n        if (this.current < this.vector.len()) {\n            let value = this.vector.get(this.current);\n            this.current += 1;\n            return { value, done: false };\n        }\n        return { value: null, done: true };\n    }\n}\n","import * as near from \"../api\";\nimport { u8ArrayToBytes, bytesToU8Array } from \"../utils\";\nimport { Vector, VectorIterator } from \"./vector\";\nconst ERR_INCONSISTENT_STATE = \"The collection is an inconsistent state. Did previous smart contract execution terminate unexpectedly?\";\nexport class UnorderedMap {\n    constructor(prefix) {\n        this.length = 0;\n        this.prefix = prefix;\n        this.keyIndexPrefix = prefix + \"i\";\n        let indexKey = prefix + \"k\";\n        let indexValue = prefix + \"v\";\n        this.keys = new Vector(indexKey);\n        this.values = new Vector(indexValue);\n    }\n    len() {\n        let keysLen = this.keys.len();\n        let valuesLen = this.values.len();\n        if (keysLen != valuesLen) {\n            throw new Error(ERR_INCONSISTENT_STATE);\n        }\n        return keysLen;\n    }\n    isEmpty() {\n        let keysIsEmpty = this.keys.isEmpty();\n        let valuesIsEmpty = this.values.isEmpty();\n        if (keysIsEmpty != valuesIsEmpty) {\n            throw new Error(ERR_INCONSISTENT_STATE);\n        }\n        return keysIsEmpty;\n    }\n    serializeIndex(index) {\n        let data = new Uint32Array([index]);\n        let array = new Uint8Array(data.buffer);\n        return u8ArrayToBytes(array);\n    }\n    deserializeIndex(rawIndex) {\n        let array = bytesToU8Array(rawIndex);\n        let data = new Uint32Array(array.buffer);\n        return data[0];\n    }\n    getIndexRaw(key) {\n        let indexLookup = this.keyIndexPrefix + JSON.stringify(key);\n        let indexRaw = near.storageRead(indexLookup);\n        return indexRaw;\n    }\n    get(key) {\n        let indexRaw = this.getIndexRaw(key);\n        if (indexRaw) {\n            let index = this.deserializeIndex(indexRaw);\n            let value = this.values.get(index);\n            if (value) {\n                return value;\n            }\n            else {\n                throw new Error(ERR_INCONSISTENT_STATE);\n            }\n        }\n        return null;\n    }\n    set(key, value) {\n        let indexLookup = this.keyIndexPrefix + JSON.stringify(key);\n        let indexRaw = near.storageRead(indexLookup);\n        if (indexRaw) {\n            let index = this.deserializeIndex(indexRaw);\n            return this.values.replace(index, value);\n        }\n        else {\n            let nextIndex = this.len();\n            let nextIndexRaw = this.serializeIndex(nextIndex);\n            near.storageWrite(indexLookup, nextIndexRaw);\n            this.keys.push(key);\n            this.values.push(value);\n            return null;\n        }\n    }\n    remove(key) {\n        let indexLookup = this.keyIndexPrefix + JSON.stringify(key);\n        let indexRaw = near.storageRead(indexLookup);\n        if (indexRaw) {\n            if (this.len() == 1) {\n                // If there is only one element then swap remove simply removes it without\n                // swapping with the last element.\n                near.storageRemove(indexLookup);\n            }\n            else {\n                // If there is more than one element then swap remove swaps it with the last\n                // element.\n                let lastKey = this.keys.get(this.len() - 1);\n                if (!lastKey) {\n                    throw new Error(ERR_INCONSISTENT_STATE);\n                }\n                near.storageRemove(indexLookup);\n                // If the removed element was the last element from keys, then we don't need to\n                // reinsert the lookup back.\n                if (lastKey != key) {\n                    let lastLookupKey = this.keyIndexPrefix + JSON.stringify(lastKey);\n                    near.storageWrite(lastLookupKey, indexRaw);\n                }\n            }\n            let index = this.deserializeIndex(indexRaw);\n            this.keys.swapRemove(index);\n            return this.values.swapRemove(index);\n        }\n        return null;\n    }\n    clear() {\n        for (let key of this.keys) {\n            let indexLookup = this.keyIndexPrefix + JSON.stringify(key);\n            near.storageRemove(indexLookup);\n        }\n        this.keys.clear();\n        this.values.clear();\n    }\n    toArray() {\n        let ret = [];\n        for (let v of this) {\n            ret.push(v);\n        }\n        return ret;\n    }\n    [Symbol.iterator]() {\n        return new UnorderedMapIterator(this);\n    }\n    extend(kvs) {\n        for (let [k, v] of kvs) {\n            this.set(k, v);\n        }\n    }\n    serialize() {\n        return JSON.stringify(this);\n    }\n    // converting plain object to class object\n    static deserialize(data) {\n        let map = new UnorderedMap(data.prefix);\n        // reconstruct UnorderedMap\n        map.length = data.length;\n        // reconstruct keys Vector\n        map.keys = new Vector(data.prefix + \"k\");\n        map.keys.length = data.keys.length;\n        // reconstruct values Vector\n        map.values = new Vector(data.prefix + \"v\");\n        map.values.length = data.values.length;\n        return map;\n    }\n}\nclass UnorderedMapIterator {\n    constructor(unorderedMap) {\n        this.keys = new VectorIterator(unorderedMap.keys);\n        this.values = new VectorIterator(unorderedMap.values);\n    }\n    next() {\n        let key = this.keys.next();\n        let value = this.values.next();\n        if (key.done != value.done) {\n            throw new Error(ERR_INCONSISTENT_STATE);\n        }\n        return { value: [key.value, value.value], done: key.done };\n    }\n}\n","import * as near from \"../api\";\nimport { u8ArrayToBytes, bytesToU8Array } from \"../utils\";\nimport { Vector } from \"./vector\";\nconst ERR_INCONSISTENT_STATE = \"The collection is an inconsistent state. Did previous smart contract execution terminate unexpectedly?\";\nexport class UnorderedSet {\n    constructor(prefix) {\n        this.length = 0;\n        this.prefix = prefix;\n        this.elementIndexPrefix = prefix + \"i\";\n        let elementsPrefix = prefix + \"e\";\n        this.elements = new Vector(elementsPrefix);\n    }\n    len() {\n        return this.elements.len();\n    }\n    isEmpty() {\n        return this.elements.isEmpty();\n    }\n    serializeIndex(index) {\n        let data = new Uint32Array([index]);\n        let array = new Uint8Array(data.buffer);\n        return u8ArrayToBytes(array);\n    }\n    deserializeIndex(rawIndex) {\n        let array = bytesToU8Array(rawIndex);\n        let data = new Uint32Array(array.buffer);\n        return data[0];\n    }\n    contains(element) {\n        let indexLookup = this.elementIndexPrefix + JSON.stringify(element);\n        return near.storageHasKey(indexLookup);\n    }\n    set(element) {\n        let indexLookup = this.elementIndexPrefix + JSON.stringify(element);\n        if (near.storageRead(indexLookup)) {\n            return false;\n        }\n        else {\n            let nextIndex = this.len();\n            let nextIndexRaw = this.serializeIndex(nextIndex);\n            near.storageWrite(indexLookup, nextIndexRaw);\n            this.elements.push(element);\n            return true;\n        }\n    }\n    remove(element) {\n        let indexLookup = this.elementIndexPrefix + JSON.stringify(element);\n        let indexRaw = near.storageRead(indexLookup);\n        if (indexRaw) {\n            if (this.len() == 1) {\n                // If there is only one element then swap remove simply removes it without\n                // swapping with the last element.\n                near.storageRemove(indexLookup);\n            }\n            else {\n                // If there is more than one element then swap remove swaps it with the last\n                // element.\n                let lastElement = this.elements.get(this.len() - 1);\n                if (!lastElement) {\n                    throw new Error(ERR_INCONSISTENT_STATE);\n                }\n                near.storageRemove(indexLookup);\n                // If the removed element was the last element from keys, then we don't need to\n                // reinsert the lookup back.\n                if (lastElement != element) {\n                    let lastLookupElement = this.elementIndexPrefix + JSON.stringify(lastElement);\n                    near.storageWrite(lastLookupElement, indexRaw);\n                }\n            }\n            let index = this.deserializeIndex(indexRaw);\n            this.elements.swapRemove(index);\n            return true;\n        }\n        return false;\n    }\n    clear() {\n        for (let element of this.elements) {\n            let indexLookup = this.elementIndexPrefix + JSON.stringify(element);\n            near.storageRemove(indexLookup);\n        }\n        this.elements.clear();\n    }\n    toArray() {\n        let ret = [];\n        for (let v of this) {\n            ret.push(v);\n        }\n        return ret;\n    }\n    [Symbol.iterator]() {\n        return this.elements[Symbol.iterator]();\n    }\n    extend(elements) {\n        for (let element of elements) {\n            this.set(element);\n        }\n    }\n    serialize() {\n        return JSON.stringify(this);\n    }\n    // converting plain object to class object\n    static deserialize(data) {\n        let set = new UnorderedSet(data.prefix);\n        // reconstruct UnorderedSet\n        set.length = data.length;\n        // reconstruct Vector\n        let elementsPrefix = data.prefix + \"e\";\n        set.elements = new Vector(elementsPrefix);\n        set.elements.length = data.elements.length;\n        return set;\n    }\n}\n","import { Contract } from \"./contract\";\nimport { restoreOwners } from \"./nft_listing\";\n\nexport class Listing {\n  token_id: string;\n  owner_id: string;\n  approval_id: number;\n  company_id: string;\n  sale_price: string;\n  constructor({\n    token_id,\n    owner_id,\n    approval_id,\n    company_id,\n    sale_price,\n  }: {\n    token_id: string;\n    owner_id: string;\n    approval_id: number;\n    company_id: string;\n    sale_price: string;\n  }) {\n    this.token_id = token_id;\n    this.owner_id = owner_id;\n    this.approval_id = approval_id;\n    this.company_id = company_id;\n    this.sale_price = sale_price;\n  }\n}\n\nexport const get_listings = ({\n  contract,\n}: {\n  contract: Contract;\n}): Listing[] => {\n  const listings: Listing[] = [];\n\n  let keys = contract.listings.keys;\n  for (let key of keys.toArray()) {\n    const listing = contract.listings.get(key as string);\n    if (listing) {\n      listings.push(listing as Listing);\n    }\n  }\n\n  return listings;\n};\n\nexport const get_listings_by_company = ({\n  contract,\n  company_id,\n}: {\n  contract: Contract;\n  company_id: string;\n}) => {\n  const listings = Array.from(\n    restoreOwners(contract.byCompanyId.get(company_id)) || []\n  );\n  return listings;\n};\n\nexport const get_listings_by_owner = ({\n  contract,\n  owner_id,\n}: {\n  contract: Contract;\n  owner_id: string;\n}) => {\n  const listings = Array.from(\n    restoreOwners(contract.byOwnerId.get(owner_id)) || []\n  );\n  return listings;\n};\n","import { UnorderedSet, assert, near } from \"near-sdk-js\";\nimport { Contract } from \"./contract\";\nimport { Listing } from \"./listing\";\n\nexport const list_nft = ({\n  contract,\n  token_id,\n  owner_id,\n  approval_id,\n  company_id,\n  sale_price,\n}: {\n  contract: Contract;\n  token_id: string;\n  owner_id: string;\n  approval_id: number;\n  company_id: string;\n  sale_price: string;\n}) => {\n  const signerId = near.signerAccountId();\n  const contractId = near.predecessorAccountId();\n\n  //make sure the signer isnt the predecessor\n  // assert(\n  //   signerId != contractId,\n  //   \"this function can only be called via a cross-contract call\"\n  // );\n  assert(owner_id == signerId, \"Only the owner can approve this transaction\");\n\n  let contractAndtokenId = `${contractId}.${token_id}`;\n\n  let listing = new Listing({\n    approval_id,\n    company_id,\n    owner_id,\n    sale_price,\n    token_id,\n  });\n\n  let alreadyExist = contract.listings.get(contractAndtokenId);\n  assert(!alreadyExist, \"Token already listed in Marketplace\");\n  //add the token to the marketplace listing\n  contract.listings.set(contractAndtokenId, listing);\n\n  //add the token to the company listing\n  let byCompanyId = restoreOwners(contract.byCompanyId.get(company_id));\n  if (!byCompanyId) {\n    byCompanyId = new UnorderedSet(\"byCompanyId\" + company_id.toString());\n  }\n  byCompanyId.set(token_id);\n  contract.byCompanyId.set(company_id, byCompanyId);\n\n  //add the token to the owner listing\n  let byOwnerId = restoreOwners(contract.byOwnerId.get(owner_id));\n  if (!byOwnerId) {\n    byOwnerId = new UnorderedSet(\"byOwnerId\" + owner_id.toString());\n  }\n  byOwnerId.set(contractAndtokenId);\n  contract.byOwnerId.set(owner_id, byOwnerId);\n\n  return {\n    success: true,\n  };\n};\n\nexport function restoreOwners(collection) {\n  if (!collection || typeof collection !== \"object\" || !collection.prefix) {\n    return null;\n  }\n  return UnorderedSet.deserialize(collection as UnorderedSet);\n}\n","import {\n  LookupMap,\n  NearBindgen,\n  NearContract,\n  UnorderedMap,\n  call,\n  near,\n  view,\n} from \"near-sdk-js\";\nimport { list_nft } from \"./nft_listing\";\nimport {\n  get_listings,\n  get_listings_by_company,\n  get_listings_by_owner,\n} from \"./listing\";\n\n//@ts-ignore\n@NearBindgen\nexport class Contract extends NearContract {\n  ownerId: string;\n  listings: UnorderedMap;\n  byOwnerId: LookupMap;\n  byCompanyId: LookupMap;\n  storageDeposits: LookupMap;\n\n  constructor({ owner_id }: { owner_id: string }) {\n    super();\n    this.ownerId = owner_id;\n    this.listings = new UnorderedMap(\"listings\");\n    this.byOwnerId = new LookupMap(\"byOwnerId\");\n    this.byCompanyId = new LookupMap(\"byCompanyId\");\n    this.storageDeposits = new LookupMap(\"storageDeposits\");\n  }\n\n  default() {\n    return new Contract({ owner_id: \"\" });\n  }\n\n  //@ts-ignore\n  @call\n  //list the nft for sale in marketPlace\n  nft_list({ token_id, owner_id, approval_id, company_id, sale_price }) {\n    return list_nft({\n      contract: this,\n      token_id,\n      owner_id,\n      approval_id,\n      company_id,\n      sale_price,\n    });\n  }\n\n  //@ts-ignore\n  @view\n  get_all_listings() {\n    return get_listings({ contract: this });\n  }\n  //@ts-ignore\n  @view\n  get_company_listings({ company_id }) {\n    return get_listings_by_company({ contract: this, company_id });\n  }\n  //@ts-ignore\n  @view\n  get_owner_listings({ owner_id }) {\n    return get_listings_by_owner({ contract: this, owner_id });\n  }\n}\n"],"names":["call","target","key","descriptor","view","NearBindgen","_init","args","deserializeArgs","ret","init","serialize","_get","Object","create","prototype","U64_MAX","EVICTED_REGISTER","signerAccountId","env","signer_account_id","read_register","predecessorAccountId","predecessor_account_id","storageRead","storage_read","storageHasKey","storage_has_key","storageGetEvicted","input","PromiseResult","storageWrite","value","exist","storage_write","storageRemove","storage_remove","NearContract","deserialize","rawState","near","state","JSON","parse","c","default","assign","item","constructor","undefined","Error","stringify","serializeReturn","LookupMap","keyPrefix","containsKey","storageKey","get","raw","remove","set","storageValue","extend","objects","kv","data","u8ArrayToBytes","array","e","String","fromCharCode","bytesToU8Array","bytes","Uint8Array","length","i","charCodeAt","assert","b","str","ERR_INDEX_OUT_OF_BOUNDS","ERR_INCONSISTENT_STATE","indexToKey","prefix","index","Uint32Array","buffer","Vector","len","isEmpty","swapRemove","pop","last","push","element","lastIndex","lastKey","replace","elements","Symbol","iterator","VectorIterator","clear","toArray","v","vector","current","next","done","UnorderedMap","keyIndexPrefix","indexKey","indexValue","keys","values","keysLen","valuesLen","keysIsEmpty","valuesIsEmpty","serializeIndex","deserializeIndex","rawIndex","getIndexRaw","indexLookup","indexRaw","nextIndex","nextIndexRaw","lastLookupKey","UnorderedMapIterator","kvs","k","map","unorderedMap","UnorderedSet","elementIndexPrefix","elementsPrefix","contains","lastElement","lastLookupElement","Listing","token_id","owner_id","approval_id","company_id","sale_price","get_listings","contract","listings","listing","get_listings_by_company","Array","from","restoreOwners","byCompanyId","get_listings_by_owner","byOwnerId","list_nft","signerId","contractId","contractAndtokenId","alreadyExist","toString","success","collection","Contract","_class","_class2","ownerId","storageDeposits","nft_list","get_all_listings","get_company_listings","get_owner_listings","_applyDecoratedDescriptor","getOwnPropertyDescriptor","_contract","value_return"],"mappings":"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"}